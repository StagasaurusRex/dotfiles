# macOS
alias showFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder'
alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder'
# Git
alias g-="git checkout -"
alias gc="git commit"
unalias gswc
unalias gm
alias gm="git merge --no-ff "
alias rewip="gunwip && gwip"
# Files
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
# alias ls="colorls -lA --sd"
alias ls="eza -laF"
alias e=eza
# Editors
alias x=exit
alias ggwip="gunwip && gwip"
alias v=nvim
alias vi=nvim
alias vim=nvim

alias cat="bat"

groot() {
  cd $(git rev-parse --show-toplevel)
}

brew() {
  local dump_commands=('install' 'uninstall') # Include all commands that should do a brew dump
  local main_command="${1}"
  [[ "${main_command}" == 'cask' ]] && main_command="${2}"
  arch_name="$(uname -m)"
  if [ "${arch_name}" = "arm64" ]; then
      /opt/homebrew/bin/brew ${@}
  else
     /usr/local/bin/brew ${@}
  fi

  for command in "${dump_commands[@]}"; do
    [[ "${command}" == "${main_command}" ]] && brew bundle dump --file="${HOME}/.homesick/repos/dotfiles/bootstrap/Brewfile-$(scutil --get LocalHostName)" --force
  done
}

aws-vault() {
  security unlock-keychain -p $(op read -n 'op://Personal/AWS Vault/password' --account DQPHORCFIFDX7HZ3LFVEK7QZYQ) "$HOME/Library/Keychains/aws-vault.keychain-db"
  /opt/homebrew/bin/aws-vault ${@}
}

approveDeploy() {
	aws-vault exec atlasStaging -- aws codepipeline put-approval-result --pipeline-name staging-build-app-deploy-to-staging --stage-name Approve --action-name Approve --token $(aws-vault exec atlasStaging -- aws codepipeline get-pipeline-state --name staging-build-app-deploy-to-staging | jq -r '.stageStates[] | select(.stageName == "Approve") | .actionStates[].latestExecution.token') --result status=Approved,summary=
}

deployStatus() {
	aws-vault exec atlasStaging -- aws codepipeline get-pipeline-state --name staging-build-app-deploy-to-staging | jq -r '.stageStates[].actionStates[] | select(.latestExecution.status == "InProgress") | .actionName'
}
